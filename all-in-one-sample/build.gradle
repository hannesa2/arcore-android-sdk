apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def setVersionName = { ->
    if (project.hasProperty("androidVersionName")) {
        println("Replacing versionName with supplied build parameter: " +
                "$androidVersionName")
        return androidVersionName
    } else {
        return getTag()
    }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "info.arcore.samples"

        // 24 is the minimum since ARCore only works with 24 and higher.
        minSdkVersion 24
        targetSdkVersion 29
        versionCode getGitCommitCount()
        versionName setVersionName()

        buildConfigField "String", 'GIT_USER', "\"" + getGitUser() + "\""
        buildConfigField "String", 'GIT_REPOSITORY', "\"" + getGitRepository() + "\""
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.preference:preference:1.1.0"
    implementation 'com.github.hannesa2:githubAppUpdate:0.5'

    implementation project(':samples:shared_camera_java:app')
    implementation project(':samples:hello_ar_java:app')
    implementation project(':samples:hello_ar_c:app')
    implementation project(':samples:computervision_java:app')
    implementation project(':samples:computervision_c:app')
    implementation project(':samples:cloud_anchor_java:app')
    implementation project(':samples:augmented_image_java:app')
    implementation project(':samples:augmented_image_c:app')
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

static def getTag() {
    def process = "git describe --tags --abbrev=0".execute()
    return process.text.toString().trim()
}

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

static def getGitOriginRemote() {
    def process = "git remote -v".execute()
    def values = process.text.toString().trim().split("\\r\\n|\\n|\\r")

    def found = values.find { it.startsWith("origin") && it.endsWith("(push)") }
    return found.replace("origin", "").replace("(push)", "").replace(".git", "").trim()
}

static def getGitUser() {
    def token = getGitOriginRemote().split("/")
    return token[3]
}

static def getGitRepository() {
    def token = getGitOriginRemote().split("/")
    return token[4]
}