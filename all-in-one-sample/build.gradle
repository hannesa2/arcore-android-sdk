apply plugin: 'com.android.application'

def setVersionName = { ->
    if (project.hasProperty("androidVersionName")) {
        println("Replacing versionName with supplied build parameter: " +
                "$androidVersionName")
        return androidVersionName
    } else {
        return getTag()
    }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "info.arcore.samples"

        // 24 is the minimum since ARCore only works with 24 and higher.
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName setVersionName()
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation project(':samples:shared_camera_java:app')
    implementation project(':samples:hello_ar_java:app')
    implementation project(':samples:hello_ar_c:app')
    implementation project(':samples:computervision_java:app')
    implementation project(':samples:computervision_c:app')
    implementation project(':samples:cloud_anchor_java:app')
    implementation project(':samples:augmented_image_java:app')
    implementation project(':samples:augmented_image_c:app')
}

static def getTag() {
    def process = "git describe --tags --abbrev=0".execute()
    return process.text.toString().trim()
}
