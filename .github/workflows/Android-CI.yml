name: PullRequest

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  buildDebug:
    name: Build Debug
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-14 ]
        java_version: [ 17 ]
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Debug keystore
        run: keytool -genkey -v -keystore all-in-one-sample/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
      - name: Build project
        run: ./gradlew assembleDebug
  buildRelease:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-14 ]
        java_version: [ 17 ]
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Decrypt keystore
        run: ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Build project
        run: ./gradlew assembleRelease
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
          ARCORE_KEY: ${{ secrets.ARCORE_KEY }}
          releaseKey: ${{ secrets.releaseKey }}
      - name: cleanup keystore
        run: ./signing/cleanup.sh
  buildTest:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-14 ]
        java_version: [ 17 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gradle/wrapper-validation-action@v3
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Decrypt keystore
        run: ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Debug keystore
        run: keytool -genkey -v -keystore all-in-one-sample/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
      - name: Build project
        run: ./gradlew assembleDebug
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
          ARCORE_KEY: ${{ secrets.ARCORE_KEY }}
      - name: cleanup keystore
        run: ./signing/cleanup.sh
      - name: Run tests
        run: ./gradlew test
        env:
          ARCORE_KEY: ${{ secrets.ARCORE_KEY }}
  #      - name: Run instrumentation tests
  #        uses: malinskiy/action-android/emulator-run-cmd@release/0.1.4
  #        with:
  #          cmd: ./gradlew cAT
  #          api: 28
  #          tag: default
  #          abi: x86
  #      - name: Archive Espresso results
  #        uses: actions/upload-artifact@v2.0.1
  #        with:
  #          name: LiveEdgeDetection-Espresso-report
  #          path: app/build/reports/androidTests/connected
  #      - name: Save logcat output
  #        uses: actions/upload-artifact@master
  #        if: failure()
  #        with:
  #          name: LiveEdgeDetection-logcat
  #          path: artifacts/logcat.log
  #      - name: Archive screenshots
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: LiveEdgeDetection-Screenshots
  #          path: screenshots/adb
  Check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-14 ]
        java_version: [ 17 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Decrypt keystore
        run: ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Code checks
        run: ./gradlew check
        env:
          ARCORE_KEY: ${{ secrets.ARCORE_KEY }}
      - name: Archive Lint report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: LiveEdgeDetection-Lint-report
          path: app/build/reports/lint-results.html
      - name: cleanup keystore
        run: ./signing/cleanup.sh
